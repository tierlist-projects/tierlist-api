plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.tierlist'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

configurations {
    asciidoctorExt
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    implementation 'com.auth0:java-jwt:4.4.0'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

sonar {
    properties {
        property "sonar.projectKey", "tierlist-projects_tierlist-api_AY6lQTmVDYEzFItR_8lF"
        property "sonar.projectName", "tierlist-api"
    }
}

tasks.named('testClasses') {
    doFirst {
        delete file('build/docs/asciidoc')
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy asciidoctor
}


tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file('build/docs/asciidoc')
    into file('src/main/resources/static/docs')
}

tasks.named('asciidoctor') {
    dependsOn test
    configurations 'asciidoctorExt'
    inputs.dir snippetsDir
    finalizedBy copyDocument // (3)
    doFirst { // (4)
        delete file('src/main/resources/static/docs')
    }
}

bootJar {  // (6)
    dependsOn asciidoctor
    doFirst {
        delete file('static/docs')
    }
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

jar {
    enabled = false
}

