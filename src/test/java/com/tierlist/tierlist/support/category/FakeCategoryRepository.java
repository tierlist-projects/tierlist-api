package com.tierlist.tierlist.support.category;

import com.tierlist.tierlist.category.application.domain.model.Category;
import com.tierlist.tierlist.category.application.port.out.persistence.CategoryRepository;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class FakeCategoryRepository implements CategoryRepository {

  private List<Category> data = new ArrayList<>();
  private Long autoGeneratedId = 0L;

  @Override
  public boolean existsByName(String name) {
    return data.stream().anyMatch(category -> category.getName().equals(name));
  }

  @Override
  public Category save(Category category) {
    Long id = category.getId();
    if (id == null || id == 0) {
      Category newCategory = Category.builder()
          .id(++autoGeneratedId)
          .name(category.getName())
          .favoriteCount(category.getFavoriteCount())
          .build();
      data.add(newCategory);
      return newCategory;
    }

    data.removeIf(item -> item.getId().equals(id));
    data.add(category);
    return category;
  }

  @Override
  public Optional<Category> findById(Long id) {
    return data.stream().filter(category -> category.getId().equals(id)).findFirst();
  }

  @Override
  public boolean existsById(Long categoryId) {
    return data.stream().anyMatch(category -> category.getId().equals(categoryId));
  }
}
