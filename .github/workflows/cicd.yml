name: ci

on:
  push:
    branches: [ develop ]
jobs:
  ci:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build With Gradle
        run: ./gradlew clean build

      - name: Test With Gradle
        run: ./gradlew test

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Analyze with Sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build sonar --info

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        with:
          scanMetadataReportFile: build/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: duk9741/tierlist-api
          tags: |
            ${{github.run_number}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7

      - name: Checkout Git Ops Repo
        uses: actions/checkout@v4
        with:
          repository: tierlist-projects/tierlist-git-ops
          token: ${{ secrets.GIT_PASSWORD }}

      - name: Update Git Ops Repo
        run: |
          pwd
          ls
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          sed -i "s+duk9741/tierlist-api.*+${{ steps.meta.outputs.tags }}+g" app/Deployment.yaml
          git add .
          git commit -m "action: update image tag to ${{ steps.meta.outputs.tags }}"
          git push origin main

      - name: Send Webhook to Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_CICD_WEBHOOK }}
          